//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HeThongQuanLyDuLich.ServiceFull {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback checkLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertCityLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCityLangOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCityLangOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::HeThongQuanLyDuLich.Properties.Settings.Default.HeThongQuanLyDuLich_ServiceFull_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event checkLoginCompletedEventHandler checkLoginCompleted;
        
        /// <remarks/>
        public event getAccountCompletedEventHandler getAccountCompleted;
        
        /// <remarks/>
        public event insertAccountCompletedEventHandler insertAccountCompleted;
        
        /// <remarks/>
        public event updateAccountCompletedEventHandler updateAccountCompleted;
        
        /// <remarks/>
        public event deleteAccountCompletedEventHandler deleteAccountCompleted;
        
        /// <remarks/>
        public event getLanguageCompletedEventHandler getLanguageCompleted;
        
        /// <remarks/>
        public event insertLanguageCompletedEventHandler insertLanguageCompleted;
        
        /// <remarks/>
        public event updateLanguageCompletedEventHandler updateLanguageCompleted;
        
        /// <remarks/>
        public event deleteLanguageCompletedEventHandler deleteLanguageCompleted;
        
        /// <remarks/>
        public event insertCityCompletedEventHandler insertCityCompleted;
        
        /// <remarks/>
        public event deleteCityCompletedEventHandler deleteCityCompleted;
        
        /// <remarks/>
        public event insertCityLangCompletedEventHandler insertCityLangCompleted;
        
        /// <remarks/>
        public event deleteCityLangCompletedEventHandler deleteCityLangCompleted;
        
        /// <remarks/>
        public event updateCityLangCompletedEventHandler updateCityLangCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int checkLogin(string userName, string passWord) {
            object[] results = this.Invoke("checkLogin", new object[] {
                        userName,
                        passWord});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void checkLoginAsync(string userName, string passWord) {
            this.checkLoginAsync(userName, passWord, null);
        }
        
        /// <remarks/>
        public void checkLoginAsync(string userName, string passWord, object userState) {
            if ((this.checkLoginOperationCompleted == null)) {
                this.checkLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckLoginOperationCompleted);
            }
            this.InvokeAsync("checkLogin", new object[] {
                        userName,
                        passWord}, this.checkLoginOperationCompleted, userState);
        }
        
        private void OncheckLoginOperationCompleted(object arg) {
            if ((this.checkLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkLoginCompleted(this, new checkLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account[] getAccount() {
            object[] results = this.Invoke("getAccount", new object[0]);
            return ((Account[])(results[0]));
        }
        
        /// <remarks/>
        public void getAccountAsync() {
            this.getAccountAsync(null);
        }
        
        /// <remarks/>
        public void getAccountAsync(object userState) {
            if ((this.getAccountOperationCompleted == null)) {
                this.getAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountOperationCompleted);
            }
            this.InvokeAsync("getAccount", new object[0], this.getAccountOperationCompleted, userState);
        }
        
        private void OngetAccountOperationCompleted(object arg) {
            if ((this.getAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountCompleted(this, new getAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertAccount(string name, string username, string password, int role) {
            object[] results = this.Invoke("insertAccount", new object[] {
                        name,
                        username,
                        password,
                        role});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertAccountAsync(string name, string username, string password, int role) {
            this.insertAccountAsync(name, username, password, role, null);
        }
        
        /// <remarks/>
        public void insertAccountAsync(string name, string username, string password, int role, object userState) {
            if ((this.insertAccountOperationCompleted == null)) {
                this.insertAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertAccountOperationCompleted);
            }
            this.InvokeAsync("insertAccount", new object[] {
                        name,
                        username,
                        password,
                        role}, this.insertAccountOperationCompleted, userState);
        }
        
        private void OninsertAccountOperationCompleted(object arg) {
            if ((this.insertAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertAccountCompleted(this, new insertAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateAccount(int id, string name, string username, string password, int role) {
            object[] results = this.Invoke("updateAccount", new object[] {
                        id,
                        name,
                        username,
                        password,
                        role});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateAccountAsync(int id, string name, string username, string password, int role) {
            this.updateAccountAsync(id, name, username, password, role, null);
        }
        
        /// <remarks/>
        public void updateAccountAsync(int id, string name, string username, string password, int role, object userState) {
            if ((this.updateAccountOperationCompleted == null)) {
                this.updateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAccountOperationCompleted);
            }
            this.InvokeAsync("updateAccount", new object[] {
                        id,
                        name,
                        username,
                        password,
                        role}, this.updateAccountOperationCompleted, userState);
        }
        
        private void OnupdateAccountOperationCompleted(object arg) {
            if ((this.updateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAccountCompleted(this, new updateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAccount(int id) {
            object[] results = this.Invoke("deleteAccount", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAccountAsync(int id) {
            this.deleteAccountAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteAccountAsync(int id, object userState) {
            if ((this.deleteAccountOperationCompleted == null)) {
                this.deleteAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAccountOperationCompleted);
            }
            this.InvokeAsync("deleteAccount", new object[] {
                        id}, this.deleteAccountOperationCompleted, userState);
        }
        
        private void OndeleteAccountOperationCompleted(object arg) {
            if ((this.deleteAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAccountCompleted(this, new deleteAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Language[] getLanguage() {
            object[] results = this.Invoke("getLanguage", new object[0]);
            return ((Language[])(results[0]));
        }
        
        /// <remarks/>
        public void getLanguageAsync() {
            this.getLanguageAsync(null);
        }
        
        /// <remarks/>
        public void getLanguageAsync(object userState) {
            if ((this.getLanguageOperationCompleted == null)) {
                this.getLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLanguageOperationCompleted);
            }
            this.InvokeAsync("getLanguage", new object[0], this.getLanguageOperationCompleted, userState);
        }
        
        private void OngetLanguageOperationCompleted(object arg) {
            if ((this.getLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLanguageCompleted(this, new getLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertLanguage(string langName) {
            object[] results = this.Invoke("insertLanguage", new object[] {
                        langName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertLanguageAsync(string langName) {
            this.insertLanguageAsync(langName, null);
        }
        
        /// <remarks/>
        public void insertLanguageAsync(string langName, object userState) {
            if ((this.insertLanguageOperationCompleted == null)) {
                this.insertLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertLanguageOperationCompleted);
            }
            this.InvokeAsync("insertLanguage", new object[] {
                        langName}, this.insertLanguageOperationCompleted, userState);
        }
        
        private void OninsertLanguageOperationCompleted(object arg) {
            if ((this.insertLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertLanguageCompleted(this, new insertLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateLanguage(System.Guid id, string langName) {
            object[] results = this.Invoke("updateLanguage", new object[] {
                        id,
                        langName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateLanguageAsync(System.Guid id, string langName) {
            this.updateLanguageAsync(id, langName, null);
        }
        
        /// <remarks/>
        public void updateLanguageAsync(System.Guid id, string langName, object userState) {
            if ((this.updateLanguageOperationCompleted == null)) {
                this.updateLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateLanguageOperationCompleted);
            }
            this.InvokeAsync("updateLanguage", new object[] {
                        id,
                        langName}, this.updateLanguageOperationCompleted, userState);
        }
        
        private void OnupdateLanguageOperationCompleted(object arg) {
            if ((this.updateLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateLanguageCompleted(this, new updateLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteLanguage(System.Guid id) {
            object[] results = this.Invoke("deleteLanguage", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteLanguageAsync(System.Guid id) {
            this.deleteLanguageAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteLanguageAsync(System.Guid id, object userState) {
            if ((this.deleteLanguageOperationCompleted == null)) {
                this.deleteLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteLanguageOperationCompleted);
            }
            this.InvokeAsync("deleteLanguage", new object[] {
                        id}, this.deleteLanguageOperationCompleted, userState);
        }
        
        private void OndeleteLanguageOperationCompleted(object arg) {
            if ((this.deleteLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteLanguageCompleted(this, new deleteLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertCity() {
            object[] results = this.Invoke("insertCity", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertCityAsync() {
            this.insertCityAsync(null);
        }
        
        /// <remarks/>
        public void insertCityAsync(object userState) {
            if ((this.insertCityOperationCompleted == null)) {
                this.insertCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertCityOperationCompleted);
            }
            this.InvokeAsync("insertCity", new object[0], this.insertCityOperationCompleted, userState);
        }
        
        private void OninsertCityOperationCompleted(object arg) {
            if ((this.insertCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertCityCompleted(this, new insertCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteCity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteCity(System.Guid id) {
            object[] results = this.Invoke("deleteCity", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCityAsync(System.Guid id) {
            this.deleteCityAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteCityAsync(System.Guid id, object userState) {
            if ((this.deleteCityOperationCompleted == null)) {
                this.deleteCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCityOperationCompleted);
            }
            this.InvokeAsync("deleteCity", new object[] {
                        id}, this.deleteCityOperationCompleted, userState);
        }
        
        private void OndeleteCityOperationCompleted(object arg) {
            if ((this.deleteCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCityCompleted(this, new deleteCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertCityLang", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertCityLang(System.Guid idCity, System.Guid idLang, string nameCity) {
            object[] results = this.Invoke("insertCityLang", new object[] {
                        idCity,
                        idLang,
                        nameCity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertCityLangAsync(System.Guid idCity, System.Guid idLang, string nameCity) {
            this.insertCityLangAsync(idCity, idLang, nameCity, null);
        }
        
        /// <remarks/>
        public void insertCityLangAsync(System.Guid idCity, System.Guid idLang, string nameCity, object userState) {
            if ((this.insertCityLangOperationCompleted == null)) {
                this.insertCityLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertCityLangOperationCompleted);
            }
            this.InvokeAsync("insertCityLang", new object[] {
                        idCity,
                        idLang,
                        nameCity}, this.insertCityLangOperationCompleted, userState);
        }
        
        private void OninsertCityLangOperationCompleted(object arg) {
            if ((this.insertCityLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertCityLangCompleted(this, new insertCityLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteCityLang", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteCityLang(System.Guid idCity, System.Guid idLang) {
            object[] results = this.Invoke("deleteCityLang", new object[] {
                        idCity,
                        idLang});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCityLangAsync(System.Guid idCity, System.Guid idLang) {
            this.deleteCityLangAsync(idCity, idLang, null);
        }
        
        /// <remarks/>
        public void deleteCityLangAsync(System.Guid idCity, System.Guid idLang, object userState) {
            if ((this.deleteCityLangOperationCompleted == null)) {
                this.deleteCityLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCityLangOperationCompleted);
            }
            this.InvokeAsync("deleteCityLang", new object[] {
                        idCity,
                        idLang}, this.deleteCityLangOperationCompleted, userState);
        }
        
        private void OndeleteCityLangOperationCompleted(object arg) {
            if ((this.deleteCityLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCityLangCompleted(this, new deleteCityLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateCityLang", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateCityLang(System.Guid idCity, System.Guid idLang, string nameCity) {
            object[] results = this.Invoke("updateCityLang", new object[] {
                        idCity,
                        idLang,
                        nameCity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateCityLangAsync(System.Guid idCity, System.Guid idLang, string nameCity) {
            this.updateCityLangAsync(idCity, idLang, nameCity, null);
        }
        
        /// <remarks/>
        public void updateCityLangAsync(System.Guid idCity, System.Guid idLang, string nameCity, object userState) {
            if ((this.updateCityLangOperationCompleted == null)) {
                this.updateCityLangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCityLangOperationCompleted);
            }
            this.InvokeAsync("updateCityLang", new object[] {
                        idCity,
                        idLang,
                        nameCity}, this.updateCityLangOperationCompleted, userState);
        }
        
        private void OnupdateCityLangOperationCompleted(object arg) {
            if ((this.updateCityLangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCityLangCompleted(this, new updateCityLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Account {
        
        private int idAccountField;
        
        private string fullNameField;
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Nullable<int> roleField;
        
        /// <remarks/>
        public int IdAccount {
            get {
                return this.idAccountField;
            }
            set {
                this.idAccountField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Language {
        
        private System.Guid idLanguageField;
        
        private string languageNameField;
        
        /// <remarks/>
        public System.Guid IdLanguage {
            get {
                return this.idLanguageField;
            }
            set {
                this.idLanguageField = value;
            }
        }
        
        /// <remarks/>
        public string LanguageName {
            get {
                return this.languageNameField;
            }
            set {
                this.languageNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void checkLoginCompletedEventHandler(object sender, checkLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getAccountCompletedEventHandler(object sender, getAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void insertAccountCompletedEventHandler(object sender, insertAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void updateAccountCompletedEventHandler(object sender, updateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteAccountCompletedEventHandler(object sender, deleteAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getLanguageCompletedEventHandler(object sender, getLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Language[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Language[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void insertLanguageCompletedEventHandler(object sender, insertLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void updateLanguageCompletedEventHandler(object sender, updateLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteLanguageCompletedEventHandler(object sender, deleteLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void insertCityCompletedEventHandler(object sender, insertCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteCityCompletedEventHandler(object sender, deleteCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void insertCityLangCompletedEventHandler(object sender, insertCityLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertCityLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertCityLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteCityLangCompletedEventHandler(object sender, deleteCityLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCityLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCityLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void updateCityLangCompletedEventHandler(object sender, updateCityLangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCityLangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCityLangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591